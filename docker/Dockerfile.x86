FROM nvidia/cuda:12.1.0-devel-ubuntu22.04

RUN apt-get update \
  && export TZ="America/New_York" \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y locales \
  && ln -fs "/usr/share/zoneinfo/$TZ" /etc/localtime \
  && dpkg-reconfigure --frontend noninteractive tzdata \
  && apt-get clean

RUN apt update \
 && apt-get install -y gcc-10 g++-10 cmake sudo 

# Add user
ARG user_id
ARG USER dcist
RUN useradd -U --uid ${user_id} -ms /bin/bash $USER \
 && echo "$USER:$USER" | chpasswd \
 && adduser $USER sudo \
 && echo "$USER ALL=NOPASSWD: ALL" >> /etc/sudoers.d/$USER
WORKDIR /home/$USER

RUN sudo apt-get update && sudo apt-get install -y \
    curl \
    gnupg2 \
    lsb-release

RUN sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN sudo apt-get update && sudo apt-get install --no-install-recommends wget ffmpeg=7:* \
    libsm6=2:* libxext6=2:* git=1:* nano vim=2:* ninja-build gcc-10 g++-10 -y \
    && sudo apt-get clean && sudo apt-get autoremove && rm -rf /var/lib/apt/lists/*

RUN sudo apt-get update && sudo apt-get install -y \
    ros-humble-ros-base \
    python3-colcon-common-extensions \
    python3-rosdep

USER $USER

RUN sudo apt-get update  && sudo apt-get install -y vim tmux python3-pip git python3-pybind11

RUN pip3 install torch torchvision torchaudio

RUN sudo apt-get update && sudo apt-get install -y \
    ffmpeg \
    libsm6 \
    libxext6 \
    wget

RUN pip3 install supervision pycocotools transformers addict yapf timm

RUN pip3 install opencv-python matplotlib \
    && pip3 install git+https://github.com/facebookresearch/segment-anything-2.git

RUN mkdir -p /home/$USER/models \
    && cd /home/$USER/models \
    && wget https://dl.fbaipublicfiles.com/segment_anything_2/092824/sam2.1_hiera_large.pt

RUN git clone https://github.com/IDEA-Research/Grounded-SAM-2 

ARG USE_CUDA=0
ARG TORCH_ARCH="7.0;7.5;8.0;8.6"

ENV AM_I_DOCKER=True
ENV BUILD_WITH_CUDA="${USE_CUDA}"
ENV TORCH_CUDA_ARCH_LIST="${TORCH_ARCH}"
ENV CUDA_HOME=/usr/local/cuda-12.1/
# Ensure CUDA is correctly set up
ENV PATH=/usr/local/cuda-12.1/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64:${LD_LIBRARY_PATH}

ENV CC=gcc-10
ENV CXX=g++-10

RUN pip3 install --upgrade setuptools wheel opencv-python numpy

#RUN cd Grounded-SAM-2 \
# && python3 -m pip install -e .

#RUN cd Grounded-SAM-2 \
# && python3 -m pip install --no-build-isolation -e grounding_dino

RUN cd Grounded-SAM-2/gdino_checkpoints \
 && chmod +x download_ckpts.sh \
 && ./download_ckpts.sh

RUN mkdir -p ws/src \
 && sudo chown -R $USER:$USER ws/

RUN sudo chown $USER:$USER ~/.bashrc \
 && /bin/sh -c 'echo ". /opt/ros/humble/setup.bash" >> ~/.bashrc' \
 && echo 'export PS1="\[$(tput setaf 2; tput bold)\]\u\[$(tput setaf 7)\]@\[$(tput setaf 3)\]\h\[$(tput setaf 7)\]:\[$(tput setaf 4)\]\W\[$(tput setaf 7)\]$ \[$(tput sgr0)\]"' >> ~/.bashrc
